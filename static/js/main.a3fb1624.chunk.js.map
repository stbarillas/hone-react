{"version":3,"sources":["components/table.js","components/radioButtons.js","components/chart.js","components/navbar.js","app.js","index.js"],"names":["RenderTable","props","dates","Object","keys","reverse","outputlist","i","days","outputDict","date","price","push","react_default","a","createElement","id","lib","shadow","rows","align","name","tooltip","numeric","RadioButtons","value","className","onClick","RenderChart","chartData","labels","slice","datasets","label","data","values","backgroundColor","borderColor","borderWidth","lineTension","pointBackgroundColor","es","options","title","display","text","fontSize","fontFamily","fontWeight","scales","yAxes","scaleLabel","labelString","ticks","beginAtZero","xAxes","components_radioButtons","Navbar","transparent","src","alt","style","width","height","href","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newVal","setState","_this2","fetch","then","response","json","priceDict","catch","err","console","log","_this3","components_navbar","col","components_table","chart","setDays","React","Component","ReactDOM","render","src_app","document","getElementById"],"mappings":"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","file":"static/js/main.a3fb1624.chunk.js","sourcesContent":["import React from \"react\";\nimport {DataTable, TableHeader} from \"react-mdl\";\nimport \"./table.css\"\n\n// Takes dates and days as properties to render dynamic table with correct number of rows\nfunction RenderTable(props) {\n    // Reverses dates in order to display most recent date at the top of the table\n    let dates = Object.keys(props.dates).reverse(),\n        // Creates empty output list that will get populated below\n        outputlist = [];\n    // Iterate through dates, creating an object each time that is pushed to outputList\n    for (let i = 0; i < props.days; i++) {\n        let outputDict = {},\n            date = dates[i],\n            price = props.dates[date];\n        outputDict.date = date;\n        outputDict.price = price;\n        // Populates outputList with object\n        outputlist.push(outputDict);\n    }\n    return(\n        <div>\n            <h1 id={\"tableTitle\"}>Price Table</h1>\n            <DataTable shadow={0} rows={outputlist} align={\"center\"}>\n                <TableHeader name=\"date\" tooltip=\"The amazing material name\">Date</TableHeader>\n                <TableHeader numeric name=\"price\" tooltip=\"Price per unit\">Price (USD)</TableHeader>\n            </DataTable>\n        </div>\n\n    )\n}\n\n\nexport default (RenderTable);","import React from 'react';\nimport {RadioGroup, Radio} from 'react-mdl';\nimport \"./radioButtons.css\";\n\n// Takes props.onclick and renders radio group and buttons\n// When onClick is called, passes its value to a function that injects this value to setDays method\nfunction RadioButtons(props){\n     return (\n            <div id={\"radioContainer\"}>\n                {/*<h1 id={\"radioTitle\"}>Day Filter</h1>*/}\n                <RadioGroup name=\"demo\" value=\"30\">\n                    <Radio className={\"radioButtons\"} value=\"3\" onClick={() => props.onClick(3)}>3 Days</Radio>\n                    <Radio className={\"radioButtons\"} value=\"7\" onClick={() => props.onClick(7)}>7 Days</Radio>\n                    <Radio className={\"radioButtons\"} value=\"15\" onClick={() => props.onClick(15)}>15 Days</Radio>\n                    <Radio className={\"radioButtons\"} value=\"30\" onClick={() => props.onClick(30)}>30 Days</Radio>\n                </RadioGroup>\n            </div>\n        );\n}\n\nexport default (RadioButtons);","import {Line} from \"react-chartjs-2\";\nimport React from \"react\";\nimport RadioButtons from \"./radioButtons\"\n\n\n// Takes Dates and days to create dynamic chart with correct number of data points\nfunction RenderChart(props) {\n    let chartData = {\n        // Slice dates using number of days\n        labels: Object.keys(props.dates).slice(31 - props.days, 31),\n        datasets: [{\n            label: '',\n            data: Object.values(props.dates).slice(31 - props.days, 31),\n            backgroundColor: [\n                \"rgb(59, 136, 252, .2)\",\n            ],\n            borderColor: [\n                \"rgba(0, 0, 0, 0.3)\",\n            ],\n            borderWidth: 3,\n            lineTension: .1,\n            pointBackgroundColor: \"rgb(59, 136, 252)\"\n        }]\n    }\n    let chartOptions = {\n        title: {\n            display: true,\n            text: \"Historical BTC Data\",\n            fontSize: 20,\n            fontFamily:\"Roboto\",\n            fontWeight:\"bold\"\n        },\n        scales: {\n            yAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: \"Price (USD)\",\n                },\n                ticks: {\n                    beginAtZero: false\n                }\n            }],\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: \"Date\",\n                }\n            }]\n        }\n    };\n\n    return (\n        <div>\n            <Line\n                data={chartData}\n                options={chartOptions}\n            />\n            <RadioButtons onClick={(days)=>props.onClick(days)}/>\n        </div>\n    );\n}\n\nexport default (RenderChart);","import {Header, Layout, Navigation} from \"react-mdl\";\nimport React from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar() {\n    return (\n        <div className={'navbar has-depth'}>\n            <Layout>\n                <Header className={\"is-vertically-centered\"} transparent title=\n                    {<img src=\"http://honecap.com/wp-content/uploads/2017/03/HONE-LOGO.svg\"\n                          alt=\"hone cap logo\" style={{width: \"200px\", height: \"49px\"}}/>}\n                >\n                    <Navigation>\n                        <a className={\"navbar-item\"} href=\"https://github.com/stbarillas/hone-react\">\n                            <span>Source Code</span>\n                        </a>\n                        <a className={\"navbar-item\"} href=\"http://stevebarillas.com/\">\n                            <span>Portfolio</span>\n                        </a>\n                    </Navigation>\n                </Header>\n            </Layout>\n        </div>\n    );\n}\n\nexport default (Navbar)","import React from 'react';\nimport {Grid, Cell} from 'react-mdl';\nimport './app.css';\nimport RenderTable from \"./components/table\";\nimport RenderChart from \"./components/chart\";\nimport Navbar from './components/navbar';\n\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            days: 30,\n            dates: {},\n        }\n    }\n    setDays(newVal) {\n        this.setState({days: newVal})\n    }\n\n    componentDidMount() {\n        // API call function\n        fetch('https://api.coindesk.com/v1/bpi/historical/close.json')\n        // Converts API response to json\n            .then( (response) => {\n                return response.json();\n            })\n            // Calls render functions with bci object and days as parameters.\n            .then((data) => {\n                let priceDict = data[\"bpi\"];\n                this.setState({dates: priceDict});\n            })\n            // Displays error if API call is unsuccessful\n            .catch((err) => {\n                console.log(\"API fetch was unsuccessful\");\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {/*Navbar section*/}\n                <Navbar/>\n                {/*Columns section*/}\n                <div>\n                    <Grid className=\"columns\">\n                        {/*Table column*/}\n                        <Cell col={4}>\n                            {/*Pass dates and days to table component*/}\n                            <RenderTable dates={this.state.dates} days={this.state.days}/>\n                        </Cell>\n                        {/*Graph column*/}\n                        <Cell col={8}>\n                            {/*Pass dates and days to chart component*/}\n                            <RenderChart dates={this.state.dates} days={this.state.days}\n                             onClick={(days) => this.setDays(days)}\n                            />\n                        </Cell>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport './index.css';\nimport App from './app';\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}