{"version":3,"sources":["components/table.js","components/radioButtons.js","components/chart.js","components/navbar.js","tasks/dateFormat.js","app.js","index.js"],"names":["RenderTable","props","dates","Object","keys","reverse","outputlist","i","days","outputDict","date","price","push","react_default","a","createElement","id","lib","shadow","rows","align","name","tooltip","numeric","RadioButtons","value","className","onClick","RenderChart","chartData","labels","slice","maxDays","datasets","label","data","values","backgroundColor","borderColor","borderWidth","lineTension","pointBackgroundColor","es","options","title","display","text","fontSize","fontFamily","fontWeight","scales","yAxes","scaleLabel","labelString","ticks","beginAtZero","xAxes","components_radioButtons","Navbar","transparent","src","alt","style","width","height","href","formatDate","dateObject","getFullYear","String","getMonth","padStart","getDate","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","newVal","setState","_this2","dateEnd","Date","dateStart","current","getTime","milliseconds","millisecondCalc","previousDate","fetch","then","response","json","priceDict","catch","err","console","log","_this3","components_navbar","col","components_table","chart","setDays","React","Component","ReactDOM","render","src_app","document","getElementById"],"mappings":"8SAiCgBA,MA5BhB,SAAqBC,GAMjB,IAJA,IAAIC,EAAQC,OAAOC,KAAKH,EAAMC,OAAOG,UAEjCC,EAAa,GAERC,EAAI,EAAGA,EAAIN,EAAMO,KAAMD,IAAK,CACjC,IAAIE,EAAa,GACbC,EAAOR,EAAMK,GACbI,EAAQV,EAAMC,MAAMQ,GACxBD,EAAWC,KAAOA,EAClBD,EAAWE,MAAQA,EAEnBL,EAAWM,KAAKH,GAEpB,OACII,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,GAAI,cAAR,eACAH,EAAAC,EAAAC,cAACE,EAAA,UAAD,CAAWC,OAAQ,EAAGC,KAAMb,EAAYc,MAAO,UAC3CP,EAAAC,EAAAC,cAACE,EAAA,YAAD,CAAaI,KAAK,OAAOC,QAAQ,6BAAjC,QACAT,EAAAC,EAAAC,cAACE,EAAA,YAAD,CAAaM,SAAO,EAACF,KAAK,QAAQC,QAAQ,kBAA1C,iCCJAE,MAfhB,SAAsBvB,GACjB,OACOY,EAAAC,EAAAC,cAAA,OAAKC,GAAI,kBACLH,EAAAC,EAAAC,cAACE,EAAA,WAAD,CAAYI,KAAK,OAAOI,MAAM,QAC1BZ,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOS,UAAW,eAAgBD,MAAM,KAAKE,QAAS,kBAAM1B,EAAM0B,QAAQ,MAA1E,WACAd,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOS,UAAW,eAAgBD,MAAM,KAAKE,QAAS,kBAAM1B,EAAM0B,QAAQ,MAA1E,YACAd,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOS,UAAW,eAAgBD,MAAM,MAAME,QAAS,kBAAM1B,EAAM0B,QAAQ,OAA3E,YACAd,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOS,UAAW,eAAgBD,MAAM,MAAME,QAAS,kBAAM1B,EAAM0B,QAAQ,OAA3E,UACAd,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOS,UAAW,eAAgBD,MAAM,MAAME,QAAS,kBAAM1B,EAAM0B,QAAQ,OAA3E,WACAd,EAAAC,EAAAC,cAACE,EAAA,MAAD,CAAOS,UAAW,eAAgBD,MAAM,OAAOE,QAAS,kBAAM1B,EAAM0B,QAAQ,QAA5E,cC+CJC,MAxDhB,SAAqB3B,GACjB,IAAI4B,EAAY,CAEZC,OAAQ3B,OAAOC,KAAKH,EAAMC,OAAO6B,MAAM9B,EAAM+B,QAAU/B,EAAMO,KAAMP,EAAM+B,SACzEC,SAAU,CAAC,CACPC,MAAO,GACPC,KAAMhC,OAAOiC,OAAOnC,EAAMC,OAAO6B,MAAM9B,EAAM+B,QAAU/B,EAAMO,KAAMP,EAAM+B,SACzEK,gBAAiB,CACb,yBAEJC,YAAa,CACT,sBAEJC,YAAa,EACbC,YAAa,GACbC,qBAAsB,uBA8B9B,OACI5B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CACIP,KAAMN,EACNc,QA/BO,CACfC,MAAO,CACHC,SAAS,EACTC,KAAM,sBACNC,SAAU,GACVC,WAAW,SACXC,WAAW,QAEfC,OAAQ,CACJC,MAAO,CAAC,CACJC,WAAY,CACRP,SAAS,EACTQ,YAAa,eAEjBC,MAAO,CACHC,aAAa,KAGrBC,MAAO,CAAC,CACJJ,WAAY,CACRP,SAAS,EACTQ,YAAa,cAYrBxC,EAAAC,EAAAC,cAAC0C,EAAD,CAAc9B,QAAS,SAACnB,GAAD,OAAQP,EAAM0B,QAAQnB,eC/BzCkD,MAtBhB,WACI,OACI7C,EAAAC,EAAAC,cAAA,OAAKW,UAAW,oBACZb,EAAAC,EAAAC,cAACE,EAAA,OAAD,KACIJ,EAAAC,EAAAC,cAACE,EAAA,OAAD,CAAQS,UAAW,yBAA0BiC,aAAW,EAACf,MACpD/B,EAAAC,EAAAC,cAAA,OAAK6C,IAAI,8DACJC,IAAI,gBAAgBC,MAAO,CAACC,MAAO,QAASC,OAAQ,WAE1DnD,EAAAC,EAAAC,cAACE,EAAA,WAAD,KACIJ,EAAAC,EAAAC,cAAA,KAAGW,UAAW,cAAeuC,KAAK,4CAC9BpD,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAAA,KAAGW,UAAW,cAAeuC,KAAK,6BAC9BpD,EAAAC,EAAAC,cAAA,+BCX5B,SAASmD,EAAWC,GAKhB,OAJaA,EAAWC,cAIV,IAFFC,OAAQF,EAAWG,WAAa,GAAIC,SAAS,EAAE,KAEhC,IADjBF,OAAQF,EAAWK,WAAYD,SAAS,EAAE,SC+DzCE,cA9DX,SAAAA,EAAYxE,GAAM,IAAAyE,EAAA,OAAAvE,OAAAwE,EAAA,EAAAxE,CAAAyE,KAAAH,IACdC,EAAAvE,OAAA0E,EAAA,EAAA1E,CAAAyE,KAAAzE,OAAA2E,EAAA,EAAA3E,CAAAsE,GAAAM,KAAAH,KAAM3E,KACD+E,MAAQ,CACTxE,KAAM,KACNN,MAAO,GACP8B,QAAS,MALC0C,uEAQVO,GACJL,KAAKM,SAAS,CAAC1E,KAAMyE,gDAGL,IAAAE,EAAAP,KACVQ,EDRHlB,EADY,IAAImB,MCUbC,EDNd,SAAsB9E,GAClB,IAAI+E,GAAU,IAAIF,MAAOG,UACrBC,EApBR,SAAyBjF,GAErB,OAD4B,GAAPA,EAAY,GAAK,GAAK,IAmBxBkF,CAAgBlF,GAEnC,OAAQ0D,EAAW,IAAImB,KADNE,EAAQE,ICGHE,CAAaf,KAAKI,MAAMxE,MAI1CoF,MAAM,+DAA+DN,EAAU,QAAQF,GAElFS,KAAM,SAACC,GACJ,OAAOA,EAASC,SAGnBF,KAAK,SAAC1D,GACH,IAAI6D,EAAY7D,EAAI,IACpBgD,EAAKD,SAAS,CAAChF,MAAO8F,MAGzBC,MAAM,SAACC,GACJC,QAAQC,IAAI,8BACZD,QAAQC,IAAIF,sCAIf,IAAAG,EAAAzB,KACL,OACI/D,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACuF,EAAD,MAEAzF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMS,UAAU,WAEZb,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMsF,IAAK,GAEP1F,EAAAC,EAAAC,cAACyF,EAAD,CAAatG,MAAO0E,KAAKI,MAAM9E,MAAOM,KAAMoE,KAAKI,MAAMxE,QAG3DK,EAAAC,EAAAC,cAACE,EAAA,KAAD,CAAMsF,IAAK,GAEP1F,EAAAC,EAAAC,cAAC0F,EAAD,CAAavG,MAAO0E,KAAKI,MAAM9E,MAAOM,KAAMoE,KAAKI,MAAMxE,KACtDmB,QAAS,SAACnB,GAAD,OAAU6F,EAAKK,QAAQlG,IAAOwB,QAAS4C,KAAKI,MAAMhD,qBArDtE2E,IAAMC,WCDxBC,IAASC,OACLjG,EAAAC,EAAAC,cAACgG,EAAD,MACAC,SAASC,eAAe","file":"static/js/main.4b4b7240.chunk.js","sourcesContent":["import React from \"react\";\nimport {DataTable, TableHeader} from \"react-mdl\";\nimport \"./table.css\"\n\n// Takes dates and days as properties to render dynamic table with correct number of rows\nfunction RenderTable(props) {\n    // Reverses dates in order to display most recent date at the top of the table\n    let dates = Object.keys(props.dates).reverse(),\n        // Creates empty output list that will get populated below\n        outputlist = [];\n    // Iterate through dates, creating an object each time that is pushed to outputList\n    for (let i = 0; i < props.days; i++) {\n        let outputDict = {},\n            date = dates[i],\n            price = props.dates[date];\n        outputDict.date = date;\n        outputDict.price = price;\n        // Populates outputList with object\n        outputlist.push(outputDict);\n    }\n    return(\n        <div>\n            <h1 id={\"tableTitle\"}>Price Table</h1>\n            <DataTable shadow={0} rows={outputlist} align={\"center\"}>\n                <TableHeader name=\"date\" tooltip=\"The amazing material name\">Date</TableHeader>\n                <TableHeader numeric name=\"price\" tooltip=\"Price per unit\">Price (USD)</TableHeader>\n            </DataTable>\n        </div>\n\n    )\n}\n\n\nexport default (RenderTable);","import React from 'react';\nimport {RadioGroup, Radio} from 'react-mdl';\nimport \"./radioButtons.css\";\n\n// Takes props.onclick and renders radio group and buttons\n// When onClick is called, passes its value to a function that injects this value to setDays method\nfunction RadioButtons(props){\n     return (\n            <div id={\"radioContainer\"}>\n                <RadioGroup name=\"demo\" value=\"1095\">\n                    <Radio className={\"radioButtons\"} value=\"30\" onClick={() => props.onClick(30)}>1 Month</Radio>\n                    <Radio className={\"radioButtons\"} value=\"91\" onClick={() => props.onClick(91)}>3 Months</Radio>\n                    <Radio className={\"radioButtons\"} value=\"182\" onClick={() => props.onClick(182)}>6 Months</Radio>\n                    <Radio className={\"radioButtons\"} value=\"365\" onClick={() => props.onClick(365)}>1 Year</Radio>\n                    <Radio className={\"radioButtons\"} value=\"730\" onClick={() => props.onClick(730)}>2 Years</Radio>\n                    <Radio className={\"radioButtons\"} value=\"1095\" onClick={() => props.onClick(1095)}>3 Years</Radio>\n                </RadioGroup>\n            </div>\n        );\n}\n\nexport default (RadioButtons);","import {Line} from \"react-chartjs-2\";\nimport React from \"react\";\nimport RadioButtons from \"./radioButtons\"\n\n\n// Takes Dates and days to create dynamic chart with correct number of data points\nfunction RenderChart(props) {\n    let chartData = {\n        // Slice dates using number of days\n        labels: Object.keys(props.dates).slice(props.maxDays - props.days, props.maxDays),\n        datasets: [{\n            label: '',\n            data: Object.values(props.dates).slice(props.maxDays - props.days, props.maxDays),\n            backgroundColor: [\n                \"rgb(59, 136, 252, .2)\",\n            ],\n            borderColor: [\n                \"rgba(0, 0, 0, 0.3)\",\n            ],\n            borderWidth: 3,\n            lineTension: .1,\n            pointBackgroundColor: \"rgb(59, 136, 252)\"\n        }]\n    }\n    let chartOptions = {\n        title: {\n            display: true,\n            text: \"Historical BTC Data\",\n            fontSize: 20,\n            fontFamily:\"Roboto\",\n            fontWeight:\"bold\"\n        },\n        scales: {\n            yAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: \"Price (USD)\",\n                },\n                ticks: {\n                    beginAtZero: false\n                }\n            }],\n            xAxes: [{\n                scaleLabel: {\n                    display: true,\n                    labelString: \"Date\",\n                }\n            }]\n        }\n    };\n\n    return (\n        <div>\n            <Line\n                data={chartData}\n                options={chartOptions}\n            />\n            <RadioButtons onClick={(days)=>props.onClick(days)}/>\n        </div>\n    );\n}\n\nexport default (RenderChart);","import {Header, Layout, Navigation} from \"react-mdl\";\nimport React from \"react\";\nimport \"./navbar.css\";\n\nfunction Navbar() {\n    return (\n        <div className={'navbar has-depth'}>\n            <Layout>\n                <Header className={\"is-vertically-centered\"} transparent title=\n                    {<img src=\"http://honecap.com/wp-content/uploads/2017/03/HONE-LOGO.svg\"\n                          alt=\"hone cap logo\" style={{width: \"200px\", height: \"49px\"}}/>}\n                >\n                    <Navigation>\n                        <a className={\"navbar-item\"} href=\"https://github.com/stbarillas/hone-react\">\n                            <span>Source Code</span>\n                        </a>\n                        <a className={\"navbar-item\"} href=\"http://stevebarillas.com/\">\n                            <span>Portfolio</span>\n                        </a>\n                    </Navigation>\n                </Header>\n            </Layout>\n        </div>\n    );\n}\n\nexport default (Navbar)","\nfunction millisecondCalc(days){\n    const milliseconds = days * 24 * 60 * 60 * 1000;\n    return milliseconds;\n}\n\nfunction formatDate(dateObject){\n    const year = dateObject.getFullYear(),\n        // Index starts with Jan = 0, so we add +1 so the output is accurate\n        month = String((dateObject.getMonth() + 1)).padStart(2,'0'),\n        day = String((dateObject.getDate())).padStart(2,'0');\n    return(year + \"-\"+ month + \"-\" + day);\n}\n\nfunction currentDate(){\n    const dateObject = new Date();\n    return(formatDate(dateObject));\n}\n\nfunction previousDate(days){\n    let current = new Date().getTime(),\n        milliseconds = millisecondCalc(days),\n        difference = current-milliseconds;\n    return (formatDate(new Date(difference)));\n\n\n}\n\nexport {currentDate, previousDate};","import React from 'react';\nimport {Grid, Cell} from 'react-mdl';\nimport './app.css';\nimport RenderTable from \"./components/table\";\nimport RenderChart from \"./components/chart\";\nimport Navbar from './components/navbar';\nimport {currentDate, previousDate} from './tasks/dateFormat'\n\n\n\nclass App extends React.Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            days: 1095,\n            dates: {},\n            maxDays: 1095,\n        }\n    }\n    setDays(newVal) {\n        this.setState({days: newVal})\n    }\n\n    componentDidMount() {\n        const dateEnd = currentDate();\n        const dateStart = previousDate(this.state.days);\n        // console.log(test);\n        // console.log(test2);\n        // API call function\n        fetch('https://api.coindesk.com/v1/bpi/historical/close.json?start='+dateStart+'&end='+dateEnd)\n        // Converts API response to json\n            .then( (response) => {\n                return response.json();\n            })\n            // Calls render functions with bci object and days as parameters.\n            .then((data) => {\n                let priceDict = data[\"bpi\"];\n                this.setState({dates: priceDict});\n            })\n            // Displays error if API call is unsuccessful\n            .catch((err) => {\n                console.log(\"API fetch was unsuccessful\");\n                console.log(err);\n            })\n    }\n\n    render() {\n        return (\n            <div>\n                {/*Navbar section*/}\n                <Navbar/>\n                {/*Columns section*/}\n                <div>\n                    <Grid className=\"columns\">\n                        {/*Table column*/}\n                        <Cell col={4}>\n                            {/*Pass dates and days to table component*/}\n                            <RenderTable dates={this.state.dates} days={this.state.days}/>\n                        </Cell>\n                        {/*Graph column*/}\n                        <Cell col={8}>\n                            {/*Pass dates and days to chart component*/}\n                            <RenderChart dates={this.state.dates} days={this.state.days}\n                             onClick={(days) => this.setDays(days)} maxDays={this.state.maxDays}\n                            />\n                        </Cell>\n                    </Grid>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport './index.css';\nimport App from './app';\n\n// ========================================\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}